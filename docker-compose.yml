services:
  api:
    build: ./middleware
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    env_file: ./.env
    environment:
      - POSTGRES_HOST=postgres
      - REDIS_HOST=redis
    ports:
      - $API_PORT:8000
    healthcheck:
      test: ["CMD-SHELL", "curl", "localhost:8000/"]
      interval: 1s
      timeout: 3s
      retries: 30


  postgres:
    image: postgres:14.1-alpine
    env_file: ./.env
    environment:
      - PGUSER=$POSTGRES_USER
    ports:
      - $POSTGRES_PORT:5432
    volumes:
      - ./db:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 1s
      timeout: 3s
      retries: 30

  redis:
    image: redis:6.2-alpine
    restart: always
    env_file: ./.env
    ports:
      - $REDIS_PORT:6379
    command: redis-server --save 20 1 --loglevel warning --requirepass $REDIS_PASSWORD
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 1s
      timeout: 3s
      retries: 30

  zookeeper:
    image: bitnami/zookeeper:latest
    ports:
      - "$ZK_PORT:2181"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes

  kafka:
    image: bitnami/kafka:latest
    depends_on:
      - zookeeper
    ports:
      - "$KAFKA_PORT:9092"
      - "$KAFKA_LISTENER_PORT:9093"
    environment:
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_LISTENERS=CLIENT://:9092,EXTERNAL://:$KAFKA_LISTENER_PORT
      - KAFKA_CFG_ADVERTISED_LISTENERS=CLIENT://kafka:9092,EXTERNAL://$KAFKA_HOST:$KAFKA_LISTENER_PORT
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=CLIENT
    restart: unless-stopped
